[
  {
    "objectID": "P6.html",
    "href": "P6.html",
    "title": "Sesión 6",
    "section": "",
    "text": "if (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nLoading required package: pacman\n\npacman::p_load(tidyverse,\n               writexl, \n               haven,\n               sjlabelled, \n               janitor,\n               magrittr,\n               GGally,\n               wesanderson,\n               RColorBrewer,\n               viridis,\n               ggthemes,\n               esquisse\n)\n\n\n\n\nE importamos la base e incluimos los cambios anteriores\n\netiqueta_sex&lt;-c(\"Hombre\", \"Mujer\")\n\nconcentrado2022 &lt;- haven::read_dta(\"datos/concentrado2022.dta\")  %&gt;% \n  mutate(sexo_jefe=as.numeric(sexo_jefe)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) %&gt;% \n  mutate(clase_hog=as.numeric(clase_hog)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(clase_hog, labels=c(\"unipersonal\",\n                                             \"nuclear\", \n                                             \"ampliado\",\n                                             \"compuesto\",\n                                             \"corresidente\")) %&gt;% \n  mutate(educa_jefe=as.numeric(educa_jefe)) %&gt;% \n  set_labels(educa_jefe,\n             labels=c(\"Sin instrucción\", \n                      \"Preescolar\",\n                      \"Primaria incompleta\",\n                      \"Primaria completa\",\n                      \"Secundaria incompleta\",\n                      \"Secundaria completa\",\n                      \"Preparatoria incompleta\",\n                      \"Preparatoria completa\",\n                      \"Profesional incompleta\",\n                      \"Profesional completa\",\n                      \"Posgrado\")) %&gt;% \n    mutate(ent=stringr::str_sub(folioviv, start=1, end=2 ))\n\n\n\n\nHay cursos específicos de visualización de datos. Es maravilloso pero también requiere que estudiemos bien qué tipo de datos tenemos y cuáles son nuestros objetivos.\nMe gusta mucho este recurso: https://www.data-to-viz.com/\n\n\n\n“plot()” Es la función más simple. Y es otro comando “listo”\n\n  plot(as_label(concentrado2022$sexo_jefe))\n\n\n\n\nEsto es igual que:\n\nbarplot(table(as_label(concentrado2022$sexo_jefe)))\n\n\n\n\n\n\n\nHoy vamos a presentar a un gran paquete ¡Es de los famosos! Y tiene más de diez años.\n\nhttps://qz.com/1007328/all-hail-ggplot2-the-code-powering-all-those-excellent-charts-is-10-years-old/\n\n“gg” proviene de “Grammar of Graphics”, funciona un poco como sintácticamente, de ahí su nombre.\nAlgunos recursos para aprender ggplot\n\nhttps://ggplot2-book.org/ hecha por el mero mero.\nhttp://sape.inf.usi.ch/quick-reference/ggplot2\nhttps://raw.githubusercontent.com/rstudio/cheatsheets/master/data-visualization-2.1.pdf\n\nVamos a revisar una presentación que es muy interesante\n\nhttps://evamaerey.github.io/ggplot2_grammar_guide/ggplot2_grammar_guide.html\nhttps://huygens.science.uva.nl/ggPlotteR/ Hace gráficos de ggplot con la base de datos de Gapminder\n\n\n\n\nPara hacer un gráfico, {ggplot2} tiene el comando ggplot(). Hacer gráficos con esta función tiene una lógica aditiva. Lo ideal es que iniciemos estableciendo el mapeo estético de nuestro gráfico, con el comando aes()\n\nconcentrado2022 %&gt;%\n  ggplot2::ggplot() + # ojo es un +\n  aes(x= as_label(sexo_jefe))\n\n\n\ng1&lt;-concentrado2022 %&gt;%\n  ggplot2::ggplot() + # ojo es un +\n  aes(x= as_label(sexo_jefe))\n\ng1 ## imprime el lienzo\n\n\n\n\n\n\n\n\n\nSabemos que la mejor son las barras\n\ng1 +\n  geom_bar()\n\n\n\n\n\ng1 +  geom_bar(aes(\n  fill = as_label(sexo_jefe)\n  )) ## colorea la geometría\n\n\n\n## Esto es equivalente\n\nconcentrado2022 %&gt;%\n  ggplot(aes(as_label(sexo_jefe),\n             fill = as_label(sexo_jefe)\n             )\n         ) + geom_bar()\n\n\n\n\n\n\n\nPodemos hacer histogramas y gráficos de densidad, de manera fácil. La idea es agregar en nuestro “lienzo” una geometría, un valor para dibujar en él. Esto se agrega con un “+” y con la figura que se añadirá a nuestro gráfico.\n\ng2&lt;-concentrado2022 %&gt;%\n  ggplot(aes(ing_cor))\n\ng2 ## imprime el lienzo\n\n\n\n\n\n\n\ng2 + geom_histogram() \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\ng2 + geom_density()\n\n\n\n\n\n\n\n\n\n\n\n\ng1 +  geom_bar(aes(fill = as_label(clase_hog)),\n              position=\"dodge\") #pone las categorías lado a lado y no apiladas\n\n\n\n\nOtra manera interesante de observar estas variables, es que estando apiladas, cada categoría de escolaridad se entendiera como una unidad:\n\ng_bivariado &lt;- g1 +  \n  geom_bar(aes(fill = as_label(clase_hog)),\n              position=\"fill\") ## cada categoría \"llena\" a una unidad\n\ng_bivariado\n\n\n\n\n\n\n\n\n\n\n\nRColorBrewer::display.brewer.all()\n\n\n\n\n\ng_bivariado + scale_fill_brewer(palette = \"Dark2\")\n\n\n\n\n\n\n\n\ng_bivariado + scale_fill_viridis_d()\n\n\n\n\n\n\n\n\nwesanderson::wes_palettes\n\n$BottleRocket1\n[1] \"#A42820\" \"#5F5647\" \"#9B110E\" \"#3F5151\" \"#4E2A1E\" \"#550307\" \"#0C1707\"\n\n$BottleRocket2\n[1] \"#FAD510\" \"#CB2314\" \"#273046\" \"#354823\" \"#1E1E1E\"\n\n$Rushmore1\n[1] \"#E1BD6D\" \"#EABE94\" \"#0B775E\" \"#35274A\" \"#F2300F\"\n\n$Rushmore\n[1] \"#E1BD6D\" \"#EABE94\" \"#0B775E\" \"#35274A\" \"#F2300F\"\n\n$Royal1\n[1] \"#899DA4\" \"#C93312\" \"#FAEFD1\" \"#DC863B\"\n\n$Royal2\n[1] \"#9A8822\" \"#F5CDB4\" \"#F8AFA8\" \"#FDDDA0\" \"#74A089\"\n\n$Zissou1\n[1] \"#3B9AB2\" \"#78B7C5\" \"#EBCC2A\" \"#E1AF00\" \"#F21A00\"\n\n$Darjeeling1\n[1] \"#FF0000\" \"#00A08A\" \"#F2AD00\" \"#F98400\" \"#5BBCD6\"\n\n$Darjeeling2\n[1] \"#ECCBAE\" \"#046C9A\" \"#D69C4E\" \"#ABDDDE\" \"#000000\"\n\n$Chevalier1\n[1] \"#446455\" \"#FDD262\" \"#D3DDDC\" \"#C7B19C\"\n\n$FantasticFox1\n[1] \"#DD8D29\" \"#E2D200\" \"#46ACC8\" \"#E58601\" \"#B40F20\"\n\n$Moonrise1\n[1] \"#F3DF6C\" \"#CEAB07\" \"#D5D5D3\" \"#24281A\"\n\n$Moonrise2\n[1] \"#798E87\" \"#C27D38\" \"#CCC591\" \"#29211F\"\n\n$Moonrise3\n[1] \"#85D4E3\" \"#F4B5BD\" \"#9C964A\" \"#CDC08C\" \"#FAD77B\"\n\n$Cavalcanti1\n[1] \"#D8B70A\" \"#02401B\" \"#A2A475\" \"#81A88D\" \"#972D15\"\n\n$GrandBudapest1\n[1] \"#F1BB7B\" \"#FD6467\" \"#5B1A18\" \"#D67236\"\n\n$GrandBudapest2\n[1] \"#E6A0C4\" \"#C6CDF7\" \"#D8A499\" \"#7294D4\"\n\n$IsleofDogs1\n[1] \"#9986A5\" \"#79402E\" \"#CCBA72\" \"#0F0D0E\" \"#D9D0D3\" \"#8D8680\"\n\n$IsleofDogs2\n[1] \"#EAD3BF\" \"#AA9486\" \"#B6854D\" \"#39312F\" \"#1C1718\"\n\n\n\nwesanderson::wes_palette(\"IsleofDogs1\", n=5)\n\n\n\nmi_paleta &lt;- wesanderson::wes_palette(\"IsleofDogs1\", n=5)\n\n\ng_bivariado + scale_fill_manual(values=mi_paleta)\n\n\n\n\n\n\n\n\nCambiamos el tema:\n\ng_bivariado + scale_fill_brewer(palette = \"Dark2\") + theme_minimal()\n\n\n\n\nSi queremos que sean horizontales (como debe ser)\n\ng_bivariado + \n  scale_fill_brewer(palette = \"Dark2\") +\n  theme_minimal() +\n  coord_flip()\n\n\n\n\n\n\n\nSi la lógica de las capas y lienzos parece un poco complicada para graficar con {ggplot2}, el paquete “esquisse” tiene un complemento. Cuando lo instalamos con pacman más arriba, se puede observar el complemento:\nHoy desde el complemento podemos acceder a el siguiente menú y seleccionar nuestra base.\n\n\n\nEn tu barra de íconos de Rstudio\n\n\nUna vez seleccionada, puedes hacer “drag and drop” de las variables y elegir el tipo de gráfico, incluso puedes hacer filtro con las variables disponibles\nPuedes exportar esto a una imagen, a powerpoint o como código a ejecutar en RStudio. Esta herramienta es muy útil para irnos acostumbrando al código de ggplot que puede ser bastante complicado en los primeros acercamientos\n\n\n\nPara los gráficos “cuanti-cuanti”, iniciamos con un gráfico de dispersión o scatter\n\n\n\nconcentrado2022 %&gt;% \n  ggplot() +\n  aes(x=ing_cor,\n      y=gasto_mon) +\n  geom_point() #puntito\n\n\n\n\n\n\n\n\nconcentrado2022 %&gt;% \n  ggplot() +\n  aes(x=ing_cor,\n      y=gasto_mon,\n      alpha= I(0.2))+\n  geom_jitter() ## puntito pero \"separado\"\n\n\n\n\n\nconcentrado2022 %&gt;% \n  ggplot() +\n  aes(x=ing_cor,\n      y=gasto_mon) +\n  geom_text(aes(label=ent)) ## un texto en lugar de punto\n\n\n\n\n\n\n\n\nconcentrado2022 %&gt;% \n  ggplot() +\n  aes(x=ing_cor,\n      y=gasto_mon) +\n  geom_label(aes(label=ent)) ## etiqueta\n\n\n\n\n\n\n\nCon color\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             color=tam_loc)\n         ) +\n  geom_point()\n\n\n\n\nCon shape\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             shape=tam_loc)\n  ) +\n  geom_point() ## ojo, nos da un \"warning\"\n\n\n\n\n\n\n\nCon facet_wrap\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon)) +\n  geom_point() + facet_wrap(~tam_loc)\n\n\n\n\nCon facet_wrap, columna\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon)) +\n  geom_point() +\n  facet_grid(.~tam_loc)\n\n\n\n\nCon facet_wrap, fila\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon)) +\n  geom_point() +\n  facet_grid(tam_loc~.)\n\n\n\n\n\n\n\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon)) +\n  geom_point() +\n  geom_smooth(method=\"lm\") +\n  facet_grid(tam_loc~.)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nEnchulando tantito:\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             color=tam_loc)) +\n  geom_text(aes(label=ent)) +\n  geom_smooth(method=\"lm\") + scale_fill_brewer(palette = \"Dark2\") +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             color=tam_loc)) +\n  geom_point(aes(size=tot_integ))+ ## ojo\n  theme_minimal()\n\n\n\n\nNo es lo mismo, pero es igual:\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             color=tam_loc,\n             size=tot_integ)) +\n  geom_point()+ \n  theme_minimal()\n\n\n\n\nAlgunas opciones interesantes:\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             color=tam_loc,\n             size=tot_integ)) +\n  geom_text(aes(label=ent),\n            check_overlap = TRUE)+\n  theme_minimal()\n\n\n\n\n\n\n\n\nRealiza dos gráficos. 1. Uno de una sola variable 2. otro con dos variables, el que sea de tu agrado, con las variables que te sientes cómoda o cómodo, en la base de datos de tu elección\n\nPuedes modificarlo usando el paquete {esquisse}. Envía las imágenes\n\nEnvía el script"
  },
  {
    "objectID": "P6.html#paquetes",
    "href": "P6.html#paquetes",
    "title": "Sesión 6",
    "section": "",
    "text": "if (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nLoading required package: pacman\n\npacman::p_load(tidyverse,\n               writexl, \n               haven,\n               sjlabelled, \n               janitor,\n               magrittr,\n               GGally,\n               wesanderson,\n               RColorBrewer,\n               viridis,\n               ggthemes,\n               esquisse\n)"
  },
  {
    "objectID": "P6.html#datos",
    "href": "P6.html#datos",
    "title": "Sesión 6",
    "section": "",
    "text": "E importamos la base e incluimos los cambios anteriores\n\netiqueta_sex&lt;-c(\"Hombre\", \"Mujer\")\n\nconcentrado2022 &lt;- haven::read_dta(\"datos/concentrado2022.dta\")  %&gt;% \n  mutate(sexo_jefe=as.numeric(sexo_jefe)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) %&gt;% \n  mutate(clase_hog=as.numeric(clase_hog)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(clase_hog, labels=c(\"unipersonal\",\n                                             \"nuclear\", \n                                             \"ampliado\",\n                                             \"compuesto\",\n                                             \"corresidente\")) %&gt;% \n  mutate(educa_jefe=as.numeric(educa_jefe)) %&gt;% \n  set_labels(educa_jefe,\n             labels=c(\"Sin instrucción\", \n                      \"Preescolar\",\n                      \"Primaria incompleta\",\n                      \"Primaria completa\",\n                      \"Secundaria incompleta\",\n                      \"Secundaria completa\",\n                      \"Preparatoria incompleta\",\n                      \"Preparatoria completa\",\n                      \"Profesional incompleta\",\n                      \"Profesional completa\",\n                      \"Posgrado\")) %&gt;% \n    mutate(ent=stringr::str_sub(folioviv, start=1, end=2 ))"
  },
  {
    "objectID": "P6.html#cuál-es-el-mejor-gráfico",
    "href": "P6.html#cuál-es-el-mejor-gráfico",
    "title": "Sesión 6",
    "section": "",
    "text": "Hay cursos específicos de visualización de datos. Es maravilloso pero también requiere que estudiemos bien qué tipo de datos tenemos y cuáles son nuestros objetivos.\nMe gusta mucho este recurso: https://www.data-to-viz.com/"
  },
  {
    "objectID": "P6.html#gráficos-de-graphics",
    "href": "P6.html#gráficos-de-graphics",
    "title": "Sesión 6",
    "section": "",
    "text": "“plot()” Es la función más simple. Y es otro comando “listo”\n\n  plot(as_label(concentrado2022$sexo_jefe))\n\n\n\n\nEsto es igual que:\n\nbarplot(table(as_label(concentrado2022$sexo_jefe)))"
  },
  {
    "objectID": "P6.html#gráficos-con-ggplot2",
    "href": "P6.html#gráficos-con-ggplot2",
    "title": "Sesión 6",
    "section": "",
    "text": "Hoy vamos a presentar a un gran paquete ¡Es de los famosos! Y tiene más de diez años.\n\nhttps://qz.com/1007328/all-hail-ggplot2-the-code-powering-all-those-excellent-charts-is-10-years-old/\n\n“gg” proviene de “Grammar of Graphics”, funciona un poco como sintácticamente, de ahí su nombre.\nAlgunos recursos para aprender ggplot\n\nhttps://ggplot2-book.org/ hecha por el mero mero.\nhttp://sape.inf.usi.ch/quick-reference/ggplot2\nhttps://raw.githubusercontent.com/rstudio/cheatsheets/master/data-visualization-2.1.pdf\n\nVamos a revisar una presentación que es muy interesante\n\nhttps://evamaerey.github.io/ggplot2_grammar_guide/ggplot2_grammar_guide.html\nhttps://huygens.science.uva.nl/ggPlotteR/ Hace gráficos de ggplot con la base de datos de Gapminder"
  },
  {
    "objectID": "P6.html#un-lienzo-para-dibujar",
    "href": "P6.html#un-lienzo-para-dibujar",
    "title": "Sesión 6",
    "section": "",
    "text": "Para hacer un gráfico, {ggplot2} tiene el comando ggplot(). Hacer gráficos con esta función tiene una lógica aditiva. Lo ideal es que iniciemos estableciendo el mapeo estético de nuestro gráfico, con el comando aes()\n\nconcentrado2022 %&gt;%\n  ggplot2::ggplot() + # ojo es un +\n  aes(x= as_label(sexo_jefe))\n\n\n\ng1&lt;-concentrado2022 %&gt;%\n  ggplot2::ggplot() + # ojo es un +\n  aes(x= as_label(sexo_jefe))\n\ng1 ## imprime el lienzo"
  },
  {
    "objectID": "P6.html#gráficos-univariados",
    "href": "P6.html#gráficos-univariados",
    "title": "Sesión 6",
    "section": "",
    "text": "Sabemos que la mejor son las barras\n\ng1 +\n  geom_bar()\n\n\n\n\n\ng1 +  geom_bar(aes(\n  fill = as_label(sexo_jefe)\n  )) ## colorea la geometría\n\n\n\n## Esto es equivalente\n\nconcentrado2022 %&gt;%\n  ggplot(aes(as_label(sexo_jefe),\n             fill = as_label(sexo_jefe)\n             )\n         ) + geom_bar()\n\n\n\n\n\n\n\nPodemos hacer histogramas y gráficos de densidad, de manera fácil. La idea es agregar en nuestro “lienzo” una geometría, un valor para dibujar en él. Esto se agrega con un “+” y con la figura que se añadirá a nuestro gráfico.\n\ng2&lt;-concentrado2022 %&gt;%\n  ggplot(aes(ing_cor))\n\ng2 ## imprime el lienzo\n\n\n\n\n\n\n\ng2 + geom_histogram() \n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\n\n\n\n\n\n\n\ng2 + geom_density()"
  },
  {
    "objectID": "P6.html#gráficos-bivariados",
    "href": "P6.html#gráficos-bivariados",
    "title": "Sesión 6",
    "section": "",
    "text": "g1 +  geom_bar(aes(fill = as_label(clase_hog)),\n              position=\"dodge\") #pone las categorías lado a lado y no apiladas\n\n\n\n\nOtra manera interesante de observar estas variables, es que estando apiladas, cada categoría de escolaridad se entendiera como una unidad:\n\ng_bivariado &lt;- g1 +  \n  geom_bar(aes(fill = as_label(clase_hog)),\n              position=\"fill\") ## cada categoría \"llena\" a una unidad\n\ng_bivariado"
  },
  {
    "objectID": "P6.html#temas",
    "href": "P6.html#temas",
    "title": "Sesión 6",
    "section": "",
    "text": "Cambiamos el tema:\n\ng_bivariado + scale_fill_brewer(palette = \"Dark2\") + theme_minimal()\n\n\n\n\nSi queremos que sean horizontales (como debe ser)\n\ng_bivariado + \n  scale_fill_brewer(palette = \"Dark2\") +\n  theme_minimal() +\n  coord_flip()"
  },
  {
    "objectID": "P6.html#un-atajo-esquisse",
    "href": "P6.html#un-atajo-esquisse",
    "title": "Sesión 6",
    "section": "",
    "text": "Si la lógica de las capas y lienzos parece un poco complicada para graficar con {ggplot2}, el paquete “esquisse” tiene un complemento. Cuando lo instalamos con pacman más arriba, se puede observar el complemento:\nHoy desde el complemento podemos acceder a el siguiente menú y seleccionar nuestra base.\n\n\n\nEn tu barra de íconos de Rstudio\n\n\nUna vez seleccionada, puedes hacer “drag and drop” de las variables y elegir el tipo de gráfico, incluso puedes hacer filtro con las variables disponibles\nPuedes exportar esto a una imagen, a powerpoint o como código a ejecutar en RStudio. Esta herramienta es muy útil para irnos acostumbrando al código de ggplot que puede ser bastante complicado en los primeros acercamientos"
  },
  {
    "objectID": "P6.html#gráficos-bivariados-1",
    "href": "P6.html#gráficos-bivariados-1",
    "title": "Sesión 6",
    "section": "",
    "text": "Para los gráficos “cuanti-cuanti”, iniciamos con un gráfico de dispersión o scatter\n\n\n\nconcentrado2022 %&gt;% \n  ggplot() +\n  aes(x=ing_cor,\n      y=gasto_mon) +\n  geom_point() #puntito\n\n\n\n\n\n\n\n\nconcentrado2022 %&gt;% \n  ggplot() +\n  aes(x=ing_cor,\n      y=gasto_mon,\n      alpha= I(0.2))+\n  geom_jitter() ## puntito pero \"separado\"\n\n\n\n\n\nconcentrado2022 %&gt;% \n  ggplot() +\n  aes(x=ing_cor,\n      y=gasto_mon) +\n  geom_text(aes(label=ent)) ## un texto en lugar de punto\n\n\n\n\n\n\n\n\nconcentrado2022 %&gt;% \n  ggplot() +\n  aes(x=ing_cor,\n      y=gasto_mon) +\n  geom_label(aes(label=ent)) ## etiqueta\n\n\n\n\n\n\n\nCon color\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             color=tam_loc)\n         ) +\n  geom_point()\n\n\n\n\nCon shape\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             shape=tam_loc)\n  ) +\n  geom_point() ## ojo, nos da un \"warning\"\n\n\n\n\n\n\n\nCon facet_wrap\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon)) +\n  geom_point() + facet_wrap(~tam_loc)\n\n\n\n\nCon facet_wrap, columna\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon)) +\n  geom_point() +\n  facet_grid(.~tam_loc)\n\n\n\n\nCon facet_wrap, fila\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon)) +\n  geom_point() +\n  facet_grid(tam_loc~.)\n\n\n\n\n\n\n\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon)) +\n  geom_point() +\n  geom_smooth(method=\"lm\") +\n  facet_grid(tam_loc~.)\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\nEnchulando tantito:\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             color=tam_loc)) +\n  geom_text(aes(label=ent)) +\n  geom_smooth(method=\"lm\") + scale_fill_brewer(palette = \"Dark2\") +\n  theme_minimal()\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\n\n\n\n\n\n\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             color=tam_loc)) +\n  geom_point(aes(size=tot_integ))+ ## ojo\n  theme_minimal()\n\n\n\n\nNo es lo mismo, pero es igual:\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             color=tam_loc,\n             size=tot_integ)) +\n  geom_point()+ \n  theme_minimal()\n\n\n\n\nAlgunas opciones interesantes:\n\nconcentrado2022 %&gt;% \n  ggplot(aes(x=ing_cor,\n             y=gasto_mon,\n             color=tam_loc,\n             size=tot_integ)) +\n  geom_text(aes(label=ent),\n            check_overlap = TRUE)+\n  theme_minimal()"
  },
  {
    "objectID": "P6.html#ejercicio",
    "href": "P6.html#ejercicio",
    "title": "Sesión 6",
    "section": "",
    "text": "Realiza dos gráficos. 1. Uno de una sola variable 2. otro con dos variables, el que sea de tu agrado, con las variables que te sientes cómoda o cómodo, en la base de datos de tu elección\n\nPuedes modificarlo usando el paquete {esquisse}. Envía las imágenes\n\nEnvía el script"
  },
  {
    "objectID": "P5.html",
    "href": "P5.html",
    "title": "Sesión 5",
    "section": "",
    "text": "Vamos a llamar algunas paquetes que nos ayudarán en esta práctica\n\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nLoading required package: pacman\n\npacman::p_load(tidyverse,\n               writexl, \n               haven,\n               sjlabelled, \n               janitor,\n               magrittr,\n               GGally,\n               wesanderson,\n               gt,\n               pollster,\n               srvyr,\n               dineq, \n               collapse # ojo\n)\n\n\nThe downloaded binary packages are in\n    /var/folders/3c/m4ydlb792bv73jm7whyz7sz80000gn/T//RtmpBAmpSG/downloaded_packages\n\n\n\ndineq installed\n\n\n\n\n\nE importamos la base e incluimos los cambios anteriores\n\netiqueta_sex&lt;-c(\"Hombre\", \"Mujer\")\n\nconcentrado2022 &lt;- haven::read_dta(\"datos/concentrado2022.dta\")  %&gt;% \n  mutate(sexo_jefe=as.numeric(sexo_jefe)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) %&gt;% \n  mutate(clase_hog=as.numeric(clase_hog)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(clase_hog, labels=c(\"unipersonal\",\n                                             \"nuclear\", \n                                             \"ampliado\",\n                                             \"compuesto\",\n                                             \"corresidente\")) %&gt;% \n  mutate(educa_jefe=as.numeric(educa_jefe)) %&gt;% \n  set_labels(educa_jefe,\n             labels=c(\"Sin instrucción\", \n                      \"Preescolar\",\n                      \"Primaria incompleta\",\n                      \"Primaria completa\",\n                      \"Secundaria incompleta\",\n                      \"Secundaria completa\",\n                      \"Preparatoria incompleta\",\n                      \"Preparatoria completa\",\n                      \"Profesional incompleta\",\n                      \"Profesional completa\",\n                      \"Posgrado\"))\n\nTambién importemos la base de población\n\npoblacion2022 &lt;- haven::read_dta(\"datos/poblacion2022.dta\")  \n\n\n\n\nPor ejemplo, si quisiéramos hacer una variable que separara a los hogares de acuerdo al grupo etario del jefe\n\n\n\nconcentrado2022 %&lt;&gt;% \n  mutate(joven=dplyr::if_else(edad_jefe&lt;30, 1, 0))\n\nconcentrado2022 %&gt;% tabyl(edad_jefe,joven)\n\n edad_jefe    0    1\n        13    0    2\n        14    0    3\n        15    0   10\n        16    0   10\n        17    0   29\n        18    0  125\n        19    0  152\n        20    0  220\n        21    0  306\n        22    0  451\n        23    0  561\n        24    0  634\n        25    0  794\n        26    0  828\n        27    0 1015\n        28    0 1183\n        29    0 1180\n        30 1458    0\n        31 1280    0\n        32 1554    0\n        33 1488    0\n        34 1481    0\n        35 1665    0\n        36 1675    0\n        37 1652    0\n        38 1932    0\n        39 1751    0\n        40 2067    0\n        41 1571    0\n        42 2265    0\n        43 1903    0\n        44 1762    0\n        45 2080    0\n        46 1830    0\n        47 2066    0\n        48 2076    0\n        49 2022    0\n        50 2436    0\n        51 1746    0\n        52 2286    0\n        53 1936    0\n        54 1966    0\n        55 1810    0\n        56 1917    0\n        57 1839    0\n        58 1775    0\n        59 1617    0\n        60 1880    0\n        61 1373    0\n        62 1851    0\n        63 1633    0\n        64 1457    0\n        65 1697    0\n        66 1289    0\n        67 1396    0\n        68 1333    0\n        69 1036    0\n        70 1157    0\n        71  808    0\n        72 1136    0\n        73  965    0\n        74  858    0\n        75  903    0\n        76  704    0\n        77  712    0\n        78  785    0\n        79  520    0\n        80  628    0\n        81  372    0\n        82  537    0\n        83  370    0\n        84  398    0\n        85  364    0\n        86  298    0\n        87  257    0\n        88  197    0\n        89  150    0\n        90  152    0\n        91   87    0\n        92  105    0\n        93   89    0\n        94   47    0\n        95   36    0\n        96   33    0\n        97   21    0\n        98   21    0\n        99   20    0\n       100    7    0\n       101    1    0\n       102    6    0\n       103    1    0\n       104    1    0\n       106    1    0\n       109    1    0\n\n\n\n\n\nEsto nos ayuda para recodificación múltiple\n\nconcentrado2022 %&lt;&gt;% \n  mutate(grupo_edad2=dplyr::case_when(edad_jefe&lt;30 ~ 1,\n                                      edad_jefe&gt;29 & edad_jefe&lt;45 ~ 2,\n                                      edad_jefe&gt;44 & edad_jefe&lt;65 ~ 3,\n                                      edad_jefe&gt;64 ~ 4))\n\n#TRUE~ 4\n\nconcentrado2022 %&gt;% tabyl(edad_jefe,grupo_edad2)\n\n edad_jefe    1    2    3    4\n        13    2    0    0    0\n        14    3    0    0    0\n        15   10    0    0    0\n        16   10    0    0    0\n        17   29    0    0    0\n        18  125    0    0    0\n        19  152    0    0    0\n        20  220    0    0    0\n        21  306    0    0    0\n        22  451    0    0    0\n        23  561    0    0    0\n        24  634    0    0    0\n        25  794    0    0    0\n        26  828    0    0    0\n        27 1015    0    0    0\n        28 1183    0    0    0\n        29 1180    0    0    0\n        30    0 1458    0    0\n        31    0 1280    0    0\n        32    0 1554    0    0\n        33    0 1488    0    0\n        34    0 1481    0    0\n        35    0 1665    0    0\n        36    0 1675    0    0\n        37    0 1652    0    0\n        38    0 1932    0    0\n        39    0 1751    0    0\n        40    0 2067    0    0\n        41    0 1571    0    0\n        42    0 2265    0    0\n        43    0 1903    0    0\n        44    0 1762    0    0\n        45    0    0 2080    0\n        46    0    0 1830    0\n        47    0    0 2066    0\n        48    0    0 2076    0\n        49    0    0 2022    0\n        50    0    0 2436    0\n        51    0    0 1746    0\n        52    0    0 2286    0\n        53    0    0 1936    0\n        54    0    0 1966    0\n        55    0    0 1810    0\n        56    0    0 1917    0\n        57    0    0 1839    0\n        58    0    0 1775    0\n        59    0    0 1617    0\n        60    0    0 1880    0\n        61    0    0 1373    0\n        62    0    0 1851    0\n        63    0    0 1633    0\n        64    0    0 1457    0\n        65    0    0    0 1697\n        66    0    0    0 1289\n        67    0    0    0 1396\n        68    0    0    0 1333\n        69    0    0    0 1036\n        70    0    0    0 1157\n        71    0    0    0  808\n        72    0    0    0 1136\n        73    0    0    0  965\n        74    0    0    0  858\n        75    0    0    0  903\n        76    0    0    0  704\n        77    0    0    0  712\n        78    0    0    0  785\n        79    0    0    0  520\n        80    0    0    0  628\n        81    0    0    0  372\n        82    0    0    0  537\n        83    0    0    0  370\n        84    0    0    0  398\n        85    0    0    0  364\n        86    0    0    0  298\n        87    0    0    0  257\n        88    0    0    0  197\n        89    0    0    0  150\n        90    0    0    0  152\n        91    0    0    0   87\n        92    0    0    0  105\n        93    0    0    0   89\n        94    0    0    0   47\n        95    0    0    0   36\n        96    0    0    0   33\n        97    0    0    0   21\n        98    0    0    0   21\n        99    0    0    0   20\n       100    0    0    0    7\n       101    0    0    0    1\n       102    0    0    0    6\n       103    0    0    0    1\n       104    0    0    0    1\n       106    0    0    0    1\n       109    0    0    0    1\n\n\n\n\n\nPara cambiar los nombres de las variables podemos cambiarlos nombres\n\nconcentrado2022 %&lt;&gt;%\n  dplyr::rename(nuevo_nombre=grupo_edad2)\n\nEsto en base sería similar a\n\nnames(concentrado2022)[128]&lt;-\"grupo_edad2\"\nnames(concentrado2022)\n\n  [1] \"folioviv\"    \"foliohog\"    \"ubica_geo\"   \"tam_loc\"     \"est_socio\"  \n  [6] \"est_dis\"     \"upm\"         \"factor\"      \"clase_hog\"   \"sexo_jefe\"  \n [11] \"edad_jefe\"   \"educa_jefe\"  \"tot_integ\"   \"hombres\"     \"mujeres\"    \n [16] \"mayores\"     \"menores\"     \"p12_64\"      \"p65mas\"      \"ocupados\"   \n [21] \"percep_ing\"  \"perc_ocupa\"  \"ing_cor\"     \"ingtrab\"     \"trabajo\"    \n [26] \"sueldos\"     \"horas_extr\"  \"comisiones\"  \"aguinaldo\"   \"indemtrab\"  \n [31] \"otra_rem\"    \"remu_espec\"  \"negocio\"     \"noagrop\"     \"industria\"  \n [36] \"comercio\"    \"servicios\"   \"agrope\"      \"agricolas\"   \"pecuarios\"  \n [41] \"reproducc\"   \"pesca\"       \"otros_trab\"  \"rentas\"      \"utilidad\"   \n [46] \"arrenda\"     \"transfer\"    \"jubilacion\"  \"becas\"       \"donativos\"  \n [51] \"remesas\"     \"bene_gob\"    \"transf_hog\"  \"trans_inst\"  \"estim_alqu\" \n [56] \"otros_ing\"   \"gasto_mon\"   \"alimentos\"   \"ali_dentro\"  \"cereales\"   \n [61] \"carnes\"      \"pescado\"     \"leche\"       \"huevo\"       \"aceites\"    \n [66] \"tuberculo\"   \"verduras\"    \"frutas\"      \"azucar\"      \"cafe\"       \n [71] \"especias\"    \"otros_alim\"  \"bebidas\"     \"ali_fuera\"   \"tabaco\"     \n [76] \"vesti_calz\"  \"vestido\"     \"calzado\"     \"vivienda\"    \"alquiler\"   \n [81] \"pred_cons\"   \"agua\"        \"energia\"     \"limpieza\"    \"cuidados\"   \n [86] \"utensilios\"  \"enseres\"     \"salud\"       \"atenc_ambu\"  \"hospital\"   \n [91] \"medicinas\"   \"transporte\"  \"publico\"     \"foraneo\"     \"adqui_vehi\" \n [96] \"mantenim\"    \"refaccion\"   \"combus\"      \"comunica\"    \"educa_espa\" \n[101] \"educacion\"   \"esparci\"     \"paq_turist\"  \"personales\"  \"cuida_pers\" \n[106] \"acces_pers\"  \"otros_gas\"   \"transf_gas\"  \"percep_tot\"  \"retiro_inv\" \n[111] \"prestamos\"   \"otras_perc\"  \"ero_nm_viv\"  \"ero_nm_hog\"  \"erogac_tot\" \n[116] \"cuota_viv\"   \"mater_serv\"  \"material\"    \"servicio\"    \"deposito\"   \n[121] \"prest_terc\"  \"pago_tarje\"  \"deudas\"      \"balance\"     \"otras_erog\" \n[126] \"smg\"         \"joven\"       \"grupo_edad2\"\n\n\n\n\n\n\nEn prácticas pasadas ya revisamos las selecciones y los filtros pero avanzaremos.\n\n\nTenemos a veces variables que inician o terminan igual porque son parte de una sección, podemos elegir las variables de esa forma:\n\nconcentrado2022 %&gt;% \n  select(starts_with(\"ing\"))\n\n# A tibble: 90,102 × 2\n   ing_cor ingtrab\n     &lt;dbl&gt;   &lt;dbl&gt;\n 1  56124.  35707.\n 2 108049.  66766.\n 3 133853.  93082.\n 4 105054.      0 \n 5  24212.  22255.\n 6 121650.  40255.\n 7  60261.  33359.\n 8  95978.      0 \n 9 158399.  80951.\n10  61343.  31182.\n# ℹ 90,092 more rows\n\n\nQue tenga la cadena en cualquier parte del nombre\n\nconcentrado2022 %&gt;% \n  select(matches(\"ing\"))\n\n# A tibble: 90,102 × 4\n   percep_ing ing_cor ingtrab otros_ing\n        &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1          3  56124.  35707.         0\n 2          2 108049.  66766.         0\n 3          2 133853.  93082.         0\n 4          2 105054.      0          0\n 5          1  24212.  22255.         0\n 6          4 121650.  40255.         0\n 7          2  60261.  33359.         0\n 8          1  95978.      0          0\n 9          3 158399.  80951.         0\n10          2  61343.  31182.         0\n# ℹ 90,092 more rows\n\n\nQue tenga la cadena en la parte final\n\nconcentrado2022 %&gt;% \n  select(matches(\"hog\"))\n\n# A tibble: 90,102 × 4\n   foliohog clase_hog transf_hog ero_nm_hog\n   &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1 1                3         0          0 \n 2 1                2      9000.         0 \n 3 1                2         0          0 \n 4 1                3         0          0 \n 5 2                1         0       3214.\n 6 1                2         0          0 \n 7 1                2         0          0 \n 8 1                1      2443.         0 \n 9 1                2         0          0 \n10 1                2      1286.         0 \n# ℹ 90,092 more rows\n\n\n\n\n\nSi queremos seleccionar varios elementos en un solo comando, podemos utilizar %in% seguido de un vector de las opciones a señalar.\nSupongamos que nos queremos quedar con los datos de dos entidades. Con esta excusa también aprenderemos a usar una función para extraer de las cadenas\n\nconcentrado2022 %&lt;&gt;% \n  mutate(ent=stringr::str_sub(folioviv, start=1, end=2 ))\n\nMás del paquete {stringr} aquí\n\nconcentrado2022 %&gt;% \n  filter(ent%in%c(\"09\", \"15\"))\n\n# A tibble: 6,112 × 129\n   folioviv  foliohog ubica_geo tam_loc est_socio est_dis upm   factor clase_hog\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1 09000069… 1        09002     1       3         141     0003…   1578         3\n 2 09000069… 1        09002     1       3         141     0003…   1578         2\n 3 09000069… 1        09002     1       3         141     0003…   1578         3\n 4 09000069… 1        09002     1       3         141     0003…   1578         3\n 5 09000069… 1        09002     1       3         141     0003…   1578         3\n 6 09000069… 1        09002     1       3         141     0003…   1578         2\n 7 09000092… 1        09002     1       3         141     0003…   1474         2\n 8 09000092… 1        09002     1       3         141     0003…   1474         3\n 9 09000092… 1        09002     1       3         141     0003…   1474         1\n10 09000092… 1        09002     1       3         141     0003…   1474         2\n# ℹ 6,102 more rows\n# ℹ 120 more variables: sexo_jefe &lt;dbl&gt;, edad_jefe &lt;dbl&gt;, educa_jefe &lt;dbl&gt;,\n#   tot_integ &lt;dbl&gt;, hombres &lt;dbl&gt;, mujeres &lt;dbl&gt;, mayores &lt;dbl&gt;,\n#   menores &lt;dbl&gt;, p12_64 &lt;dbl&gt;, p65mas &lt;dbl&gt;, ocupados &lt;dbl&gt;,\n#   percep_ing &lt;dbl&gt;, perc_ocupa &lt;dbl&gt;, ing_cor &lt;dbl&gt;, ingtrab &lt;dbl&gt;,\n#   trabajo &lt;dbl&gt;, sueldos &lt;dbl&gt;, horas_extr &lt;dbl&gt;, comisiones &lt;dbl&gt;,\n#   aguinaldo &lt;dbl&gt;, indemtrab &lt;dbl&gt;, otra_rem &lt;dbl&gt;, remu_espec &lt;dbl&gt;, …\n\n\nSi queremos negar esta relación o casi cualquier otro filtro:\n\nconcentrado2022 %&gt;% \n  filter(!ent%in%c(\"09\", \"15\"))\n\n# A tibble: 83,990 × 129\n   folioviv  foliohog ubica_geo tam_loc est_socio est_dis upm   factor clase_hog\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1 01000050… 1        01001     1       4         003     0000…    206         3\n 2 01000050… 1        01001     1       4         003     0000…    206         2\n 3 01000050… 1        01001     1       4         003     0000…    206         2\n 4 01000120… 1        01001     1       3         002     0000…    167         3\n 5 01000120… 2        01001     1       3         002     0000…    167         1\n 6 01000120… 1        01001     1       3         002     0000…    167         2\n 7 01000120… 1        01001     1       3         002     0000…    167         2\n 8 01000193… 1        01001     1       4         003     0000…    212         1\n 9 01000193… 1        01001     1       4         003     0000…    212         2\n10 01000193… 1        01001     1       4         003     0000…    212         2\n# ℹ 83,980 more rows\n# ℹ 120 more variables: sexo_jefe &lt;dbl&gt;, edad_jefe &lt;dbl&gt;, educa_jefe &lt;dbl&gt;,\n#   tot_integ &lt;dbl&gt;, hombres &lt;dbl&gt;, mujeres &lt;dbl&gt;, mayores &lt;dbl&gt;,\n#   menores &lt;dbl&gt;, p12_64 &lt;dbl&gt;, p65mas &lt;dbl&gt;, ocupados &lt;dbl&gt;,\n#   percep_ing &lt;dbl&gt;, perc_ocupa &lt;dbl&gt;, ing_cor &lt;dbl&gt;, ingtrab &lt;dbl&gt;,\n#   trabajo &lt;dbl&gt;, sueldos &lt;dbl&gt;, horas_extr &lt;dbl&gt;, comisiones &lt;dbl&gt;,\n#   aguinaldo &lt;dbl&gt;, indemtrab &lt;dbl&gt;, otra_rem &lt;dbl&gt;, remu_espec &lt;dbl&gt;, …\n\n\n\n\n\nSi intentamos por ejemplo hacer un filtro para quitar los valores perdidos, no se puede hacer con var==NA\nHay un operador especial para decirnos si un valor es perdido o no.\n\nvector&lt;-c(1:5, NA, sqrt(-1), 5/0, -5/0)\n\nWarning in sqrt(-1): Se han producido NaNs\n\nvector\n\n[1]    1    2    3    4    5   NA  NaN  Inf -Inf\n\n\n\nis.na(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE\n\n\n\nis.nan(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n\n\n\nis.infinite(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE\n\n\nComo son condiciones, funcionan como filtros, esto es útil para quitarnos algunos valores perdidos de análisis\n\nconcentrado2022 %&gt;% \n  filter(!is.na(ing_cor)) # no hay perdidos, hay 0\n\n# A tibble: 90,102 × 129\n   folioviv  foliohog ubica_geo tam_loc est_socio est_dis upm   factor clase_hog\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1 01000050… 1        01001     1       4         003     0000…    206         3\n 2 01000050… 1        01001     1       4         003     0000…    206         2\n 3 01000050… 1        01001     1       4         003     0000…    206         2\n 4 01000120… 1        01001     1       3         002     0000…    167         3\n 5 01000120… 2        01001     1       3         002     0000…    167         1\n 6 01000120… 1        01001     1       3         002     0000…    167         2\n 7 01000120… 1        01001     1       3         002     0000…    167         2\n 8 01000193… 1        01001     1       4         003     0000…    212         1\n 9 01000193… 1        01001     1       4         003     0000…    212         2\n10 01000193… 1        01001     1       4         003     0000…    212         2\n# ℹ 90,092 more rows\n# ℹ 120 more variables: sexo_jefe &lt;dbl&gt;, edad_jefe &lt;dbl&gt;, educa_jefe &lt;dbl&gt;,\n#   tot_integ &lt;dbl&gt;, hombres &lt;dbl&gt;, mujeres &lt;dbl&gt;, mayores &lt;dbl&gt;,\n#   menores &lt;dbl&gt;, p12_64 &lt;dbl&gt;, p65mas &lt;dbl&gt;, ocupados &lt;dbl&gt;,\n#   percep_ing &lt;dbl&gt;, perc_ocupa &lt;dbl&gt;, ing_cor &lt;dbl&gt;, ingtrab &lt;dbl&gt;,\n#   trabajo &lt;dbl&gt;, sueldos &lt;dbl&gt;, horas_extr &lt;dbl&gt;, comisiones &lt;dbl&gt;,\n#   aguinaldo &lt;dbl&gt;, indemtrab &lt;dbl&gt;, otra_rem &lt;dbl&gt;, remu_espec &lt;dbl&gt;, …\n\n\n\n\n\n\n\n\nEl paquete {collapse} tiene muchas funciones para agregar datos. Esta es una operación que puede ser útil cuando queremos pasar de unidades más pequeñas a más grandes.\nSupongamos que necesitamos el total de personas mayores de 64 en cada hogar para pegárselo al concentrado:\n\npoblacion2022 %&gt;% \n  mutate(p65m=edad&gt;64) %&gt;% \n  select(folioviv, foliohog, p65m) %&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  collapse::fsum() -&gt;p65m_hog\n\nfsum() permite utilizar pesos y además hará la suma para cualquier variable. Por ejemplo podríamos dejar crear una variable para el tamaño del hogar\n\npoblacion2022 %&gt;% \n  mutate(p65m=edad&gt;64) %&gt;% \n  mutate(residente=1) %&gt;% \n  select(folioviv, foliohog, p65m, residente) %&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  collapse::fsum() -&gt;pob_hog\n\nTambién hay otros comandos para hacer promedios y más\n\npoblacion2022 %&gt;% \n  select(folioviv, foliohog, edad, ) %&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  collapse::fmean() -&gt;eda_hog\n\n\n\n\nEn sociodemografía es muy muy común que nos importen algunas condiciones e interrelaciones entre los miembros de un hogar. Entonces a veces estudiamos los atributos del hogar como variables de cada individuo, por lo que necesitamos que estén en la misma base.\nPodríamos hacer el merge de los dataframes creados en el apartado anterior y los de población, pero también podemos hacer los estimados dentro de la misma base, así que crearemos variables nuevas\n\npoblacion2022 %&lt;&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  mutate(mean_edad=mean(edad)) %&gt;% \n  ungroup() # esto es importante\n\nEquivalente\n\npoblacion2022 %&lt;&gt;% \n  mutate(mean_edad=mean(edad), .by= c(folioviv, foliohog))\n\nEl puntito en .by es fundamental, sin eso queda agrupado\nPodemos hacer también más operaciones\n\npoblacion2022 %&lt;&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  mutate(mean_edad=mean(edad)) %&gt;% \n  ungroup()\n\n\n\n\n\nEste es un sufijo que funciona en algunos verbos de {dplyr} y permite hacer una operación en varias variables al mismo tiempo, funciona con vars()\n\n\n\nconcentrado2022 %&gt;% \n  dplyr::mutate_at(vars(clase_hog, sexo_jefe), ~ as_label(.x)) %&gt;% # ojo con la coma y con el punto\n  tabyl(clase_hog, sexo_jefe)\n\n    clase_hog Hombre Mujer\n  unipersonal   6519  5367\n      nuclear  41919 13621\n     ampliado  12898  8888\n    compuesto    372   211\n corresidente    197   110\n\n\n\n\n\nPrimero revisemos la opción paste y paste0\n\npaste(\"a\",\"b\", sep=\"_\")\n\n[1] \"a_b\"\n\npaste(\"a\",\"b\")\n\n[1] \"a b\"\n\npaste0(\"a\",\"b\")\n\n[1] \"ab\"\n\n\n\nconcentrado2022 %&gt;% \n  dplyr::rename_at(vars(clase_hog, sexo_jefe), ~ paste0(.x, \"_2022\")) %&gt;% # sufijo\n  select(clase_hog_2022, sexo_jefe_2022)\n\n# A tibble: 90,102 × 2\n   clase_hog_2022 sexo_jefe_2022\n            &lt;dbl&gt;          &lt;dbl&gt;\n 1              3              2\n 2              2              1\n 3              2              1\n 4              3              1\n 5              1              1\n 6              2              1\n 7              2              2\n 8              1              2\n 9              2              2\n10              2              1\n# ℹ 90,092 more rows\n\n\n\nconcentrado2022 %&gt;% \n  dplyr::rename_at(vars(clase_hog, sexo_jefe), ~ paste0(\"desc_\", .x)) %&gt;% # prefijo\n  select(starts_with(\"desc\"))\n\n# A tibble: 90,102 × 2\n   desc_clase_hog desc_sexo_jefe\n            &lt;dbl&gt;          &lt;dbl&gt;\n 1              3              2\n 2              2              1\n 3              2              1\n 4              3              1\n 5              1              1\n 6              2              1\n 7              2              2\n 8              1              2\n 9              2              2\n10              2              1\n# ℹ 90,092 more rows\n\n\n\n\n\n\nVamos a empezar a revisar los gráficos para variables cuantitativas.\n\n\n5 números\n\nsummary(concentrado2022$ing_cor) ## ingresos\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0   28386   46074   61490   74344 7153770 \n\n\nCon pipes se pueden crear “indicadores” de nuestras variables es un tibble, tal como lo hicimos con el diseño complejo\n\nconcentrado2022 %&gt;% \n  dplyr::summarise(nombre_indicador=mean(ing_cor, na.rm=T)) # las funciones también pueden tener atributos\n\n# A tibble: 1 × 1\n  nombre_indicador\n             &lt;dbl&gt;\n1           61490.\n\n\nFunciona con group_by() y con .by()\n\nconcentrado2022 %&gt;% \n  dplyr::summarise(nombre_indicador=mean(ing_cor, na.rm=T), .by=ent) # las funciones también pueden tener atributos\n\n# A tibble: 32 × 2\n   ent   nombre_indicador\n   &lt;chr&gt;            &lt;dbl&gt;\n 1 01              73162.\n 2 02              80341.\n 3 03              87777.\n 4 04              57921.\n 5 05              69761.\n 6 06              63841.\n 7 07              40765.\n 8 08              73981.\n 9 09              77909.\n10 10              53608.\n# ℹ 22 more rows\n\n\n\nconcentrado2022 %&gt;% \n  dplyr::summarise_at(vars(contains(\"ing\")), ~ mean(.x)) # las funciones también pueden tener atributos\n\n# A tibble: 1 × 4\n  percep_ing ing_cor ingtrab otros_ing\n       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n1       2.26  61490.  40360.      50.9\n\n\n\n\n\n\nhist(concentrado2022$ing_cor)\n\n\n\nboxplot(concentrado2022$ing_cor)\n\n\n\n\nLe podemos modificar el título del eje de las x y de las y\n\nhist(concentrado2022$ing_cor, \n     main=\"Histograma de los ingresos corrientes\", \n     xlab=\"pesos mexicanos\", ylab=\"Frecuencia\") \n\n\n\n\n¡A ponerle colorcitos! Aquí hay una lista http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\n\nhist(concentrado2022$ing_cor, \n     main=\"Histograma de los ingresos corrientes\", \n     xlab=\"pesos mexicanos\", ylab=\"Frecuencia\",\n     col=\"deeppink1\") \n\n\n\n\nCon pipes:\n\nconcentrado2022 %&gt;% \n    with(hist(ing_cor)) # con with, para que entienda\n\n\n\n\nCuando usamos pipes, se debe de recordar que no es necesario escribir el nombre del data.frame en el filtro porque es lo primero que colocamos en nuestro “pipe”.\nCheca que cualquier aditamiento debe ir en el pipe donde está el comando de hist(). Ten cuidado con los paréntesis.\n\nconcentrado2022 %&gt;% \n  filter(!is.na(ing_cor)) %&gt;% # la ventaja de esta forma es que podemos hacer más operaciones\n    with(hist(ing_cor, main= \"histograma\"))\n\n\n\n\n\n\n\n\n\nplot(concentrado2022$ing_cor, concentrado2022$gasto_mon)"
  },
  {
    "objectID": "P5.html#paquetes",
    "href": "P5.html#paquetes",
    "title": "Sesión 5",
    "section": "",
    "text": "Vamos a llamar algunas paquetes que nos ayudarán en esta práctica\n\nif (!require(\"pacman\")) install.packages(\"pacman\") # instala pacman si se requiere\n\nLoading required package: pacman\n\npacman::p_load(tidyverse,\n               writexl, \n               haven,\n               sjlabelled, \n               janitor,\n               magrittr,\n               GGally,\n               wesanderson,\n               gt,\n               pollster,\n               srvyr,\n               dineq, \n               collapse # ojo\n)\n\n\nThe downloaded binary packages are in\n    /var/folders/3c/m4ydlb792bv73jm7whyz7sz80000gn/T//RtmpBAmpSG/downloaded_packages\n\n\n\ndineq installed"
  },
  {
    "objectID": "P5.html#datos",
    "href": "P5.html#datos",
    "title": "Sesión 5",
    "section": "",
    "text": "E importamos la base e incluimos los cambios anteriores\n\netiqueta_sex&lt;-c(\"Hombre\", \"Mujer\")\n\nconcentrado2022 &lt;- haven::read_dta(\"datos/concentrado2022.dta\")  %&gt;% \n  mutate(sexo_jefe=as.numeric(sexo_jefe)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(sexo_jefe, labels=etiqueta_sex) %&gt;% \n  mutate(clase_hog=as.numeric(clase_hog)) %&gt;% # para quitar el \"string\"\n  sjlabelled::set_labels(clase_hog, labels=c(\"unipersonal\",\n                                             \"nuclear\", \n                                             \"ampliado\",\n                                             \"compuesto\",\n                                             \"corresidente\")) %&gt;% \n  mutate(educa_jefe=as.numeric(educa_jefe)) %&gt;% \n  set_labels(educa_jefe,\n             labels=c(\"Sin instrucción\", \n                      \"Preescolar\",\n                      \"Primaria incompleta\",\n                      \"Primaria completa\",\n                      \"Secundaria incompleta\",\n                      \"Secundaria completa\",\n                      \"Preparatoria incompleta\",\n                      \"Preparatoria completa\",\n                      \"Profesional incompleta\",\n                      \"Profesional completa\",\n                      \"Posgrado\"))\n\nTambién importemos la base de población\n\npoblacion2022 &lt;- haven::read_dta(\"datos/poblacion2022.dta\")"
  },
  {
    "objectID": "P5.html#recodificación-de-variables",
    "href": "P5.html#recodificación-de-variables",
    "title": "Sesión 5",
    "section": "",
    "text": "Por ejemplo, si quisiéramos hacer una variable que separara a los hogares de acuerdo al grupo etario del jefe\n\n\n\nconcentrado2022 %&lt;&gt;% \n  mutate(joven=dplyr::if_else(edad_jefe&lt;30, 1, 0))\n\nconcentrado2022 %&gt;% tabyl(edad_jefe,joven)\n\n edad_jefe    0    1\n        13    0    2\n        14    0    3\n        15    0   10\n        16    0   10\n        17    0   29\n        18    0  125\n        19    0  152\n        20    0  220\n        21    0  306\n        22    0  451\n        23    0  561\n        24    0  634\n        25    0  794\n        26    0  828\n        27    0 1015\n        28    0 1183\n        29    0 1180\n        30 1458    0\n        31 1280    0\n        32 1554    0\n        33 1488    0\n        34 1481    0\n        35 1665    0\n        36 1675    0\n        37 1652    0\n        38 1932    0\n        39 1751    0\n        40 2067    0\n        41 1571    0\n        42 2265    0\n        43 1903    0\n        44 1762    0\n        45 2080    0\n        46 1830    0\n        47 2066    0\n        48 2076    0\n        49 2022    0\n        50 2436    0\n        51 1746    0\n        52 2286    0\n        53 1936    0\n        54 1966    0\n        55 1810    0\n        56 1917    0\n        57 1839    0\n        58 1775    0\n        59 1617    0\n        60 1880    0\n        61 1373    0\n        62 1851    0\n        63 1633    0\n        64 1457    0\n        65 1697    0\n        66 1289    0\n        67 1396    0\n        68 1333    0\n        69 1036    0\n        70 1157    0\n        71  808    0\n        72 1136    0\n        73  965    0\n        74  858    0\n        75  903    0\n        76  704    0\n        77  712    0\n        78  785    0\n        79  520    0\n        80  628    0\n        81  372    0\n        82  537    0\n        83  370    0\n        84  398    0\n        85  364    0\n        86  298    0\n        87  257    0\n        88  197    0\n        89  150    0\n        90  152    0\n        91   87    0\n        92  105    0\n        93   89    0\n        94   47    0\n        95   36    0\n        96   33    0\n        97   21    0\n        98   21    0\n        99   20    0\n       100    7    0\n       101    1    0\n       102    6    0\n       103    1    0\n       104    1    0\n       106    1    0\n       109    1    0\n\n\n\n\n\nEsto nos ayuda para recodificación múltiple\n\nconcentrado2022 %&lt;&gt;% \n  mutate(grupo_edad2=dplyr::case_when(edad_jefe&lt;30 ~ 1,\n                                      edad_jefe&gt;29 & edad_jefe&lt;45 ~ 2,\n                                      edad_jefe&gt;44 & edad_jefe&lt;65 ~ 3,\n                                      edad_jefe&gt;64 ~ 4))\n\n#TRUE~ 4\n\nconcentrado2022 %&gt;% tabyl(edad_jefe,grupo_edad2)\n\n edad_jefe    1    2    3    4\n        13    2    0    0    0\n        14    3    0    0    0\n        15   10    0    0    0\n        16   10    0    0    0\n        17   29    0    0    0\n        18  125    0    0    0\n        19  152    0    0    0\n        20  220    0    0    0\n        21  306    0    0    0\n        22  451    0    0    0\n        23  561    0    0    0\n        24  634    0    0    0\n        25  794    0    0    0\n        26  828    0    0    0\n        27 1015    0    0    0\n        28 1183    0    0    0\n        29 1180    0    0    0\n        30    0 1458    0    0\n        31    0 1280    0    0\n        32    0 1554    0    0\n        33    0 1488    0    0\n        34    0 1481    0    0\n        35    0 1665    0    0\n        36    0 1675    0    0\n        37    0 1652    0    0\n        38    0 1932    0    0\n        39    0 1751    0    0\n        40    0 2067    0    0\n        41    0 1571    0    0\n        42    0 2265    0    0\n        43    0 1903    0    0\n        44    0 1762    0    0\n        45    0    0 2080    0\n        46    0    0 1830    0\n        47    0    0 2066    0\n        48    0    0 2076    0\n        49    0    0 2022    0\n        50    0    0 2436    0\n        51    0    0 1746    0\n        52    0    0 2286    0\n        53    0    0 1936    0\n        54    0    0 1966    0\n        55    0    0 1810    0\n        56    0    0 1917    0\n        57    0    0 1839    0\n        58    0    0 1775    0\n        59    0    0 1617    0\n        60    0    0 1880    0\n        61    0    0 1373    0\n        62    0    0 1851    0\n        63    0    0 1633    0\n        64    0    0 1457    0\n        65    0    0    0 1697\n        66    0    0    0 1289\n        67    0    0    0 1396\n        68    0    0    0 1333\n        69    0    0    0 1036\n        70    0    0    0 1157\n        71    0    0    0  808\n        72    0    0    0 1136\n        73    0    0    0  965\n        74    0    0    0  858\n        75    0    0    0  903\n        76    0    0    0  704\n        77    0    0    0  712\n        78    0    0    0  785\n        79    0    0    0  520\n        80    0    0    0  628\n        81    0    0    0  372\n        82    0    0    0  537\n        83    0    0    0  370\n        84    0    0    0  398\n        85    0    0    0  364\n        86    0    0    0  298\n        87    0    0    0  257\n        88    0    0    0  197\n        89    0    0    0  150\n        90    0    0    0  152\n        91    0    0    0   87\n        92    0    0    0  105\n        93    0    0    0   89\n        94    0    0    0   47\n        95    0    0    0   36\n        96    0    0    0   33\n        97    0    0    0   21\n        98    0    0    0   21\n        99    0    0    0   20\n       100    0    0    0    7\n       101    0    0    0    1\n       102    0    0    0    6\n       103    0    0    0    1\n       104    0    0    0    1\n       106    0    0    0    1\n       109    0    0    0    1\n\n\n\n\n\nPara cambiar los nombres de las variables podemos cambiarlos nombres\n\nconcentrado2022 %&lt;&gt;%\n  dplyr::rename(nuevo_nombre=grupo_edad2)\n\nEsto en base sería similar a\n\nnames(concentrado2022)[128]&lt;-\"grupo_edad2\"\nnames(concentrado2022)\n\n  [1] \"folioviv\"    \"foliohog\"    \"ubica_geo\"   \"tam_loc\"     \"est_socio\"  \n  [6] \"est_dis\"     \"upm\"         \"factor\"      \"clase_hog\"   \"sexo_jefe\"  \n [11] \"edad_jefe\"   \"educa_jefe\"  \"tot_integ\"   \"hombres\"     \"mujeres\"    \n [16] \"mayores\"     \"menores\"     \"p12_64\"      \"p65mas\"      \"ocupados\"   \n [21] \"percep_ing\"  \"perc_ocupa\"  \"ing_cor\"     \"ingtrab\"     \"trabajo\"    \n [26] \"sueldos\"     \"horas_extr\"  \"comisiones\"  \"aguinaldo\"   \"indemtrab\"  \n [31] \"otra_rem\"    \"remu_espec\"  \"negocio\"     \"noagrop\"     \"industria\"  \n [36] \"comercio\"    \"servicios\"   \"agrope\"      \"agricolas\"   \"pecuarios\"  \n [41] \"reproducc\"   \"pesca\"       \"otros_trab\"  \"rentas\"      \"utilidad\"   \n [46] \"arrenda\"     \"transfer\"    \"jubilacion\"  \"becas\"       \"donativos\"  \n [51] \"remesas\"     \"bene_gob\"    \"transf_hog\"  \"trans_inst\"  \"estim_alqu\" \n [56] \"otros_ing\"   \"gasto_mon\"   \"alimentos\"   \"ali_dentro\"  \"cereales\"   \n [61] \"carnes\"      \"pescado\"     \"leche\"       \"huevo\"       \"aceites\"    \n [66] \"tuberculo\"   \"verduras\"    \"frutas\"      \"azucar\"      \"cafe\"       \n [71] \"especias\"    \"otros_alim\"  \"bebidas\"     \"ali_fuera\"   \"tabaco\"     \n [76] \"vesti_calz\"  \"vestido\"     \"calzado\"     \"vivienda\"    \"alquiler\"   \n [81] \"pred_cons\"   \"agua\"        \"energia\"     \"limpieza\"    \"cuidados\"   \n [86] \"utensilios\"  \"enseres\"     \"salud\"       \"atenc_ambu\"  \"hospital\"   \n [91] \"medicinas\"   \"transporte\"  \"publico\"     \"foraneo\"     \"adqui_vehi\" \n [96] \"mantenim\"    \"refaccion\"   \"combus\"      \"comunica\"    \"educa_espa\" \n[101] \"educacion\"   \"esparci\"     \"paq_turist\"  \"personales\"  \"cuida_pers\" \n[106] \"acces_pers\"  \"otros_gas\"   \"transf_gas\"  \"percep_tot\"  \"retiro_inv\" \n[111] \"prestamos\"   \"otras_perc\"  \"ero_nm_viv\"  \"ero_nm_hog\"  \"erogac_tot\" \n[116] \"cuota_viv\"   \"mater_serv\"  \"material\"    \"servicio\"    \"deposito\"   \n[121] \"prest_terc\"  \"pago_tarje\"  \"deudas\"      \"balance\"     \"otras_erog\" \n[126] \"smg\"         \"joven\"       \"grupo_edad2\""
  },
  {
    "objectID": "P5.html#selecciones-y-filtros-avanzados",
    "href": "P5.html#selecciones-y-filtros-avanzados",
    "title": "Sesión 5",
    "section": "",
    "text": "En prácticas pasadas ya revisamos las selecciones y los filtros pero avanzaremos.\n\n\nTenemos a veces variables que inician o terminan igual porque son parte de una sección, podemos elegir las variables de esa forma:\n\nconcentrado2022 %&gt;% \n  select(starts_with(\"ing\"))\n\n# A tibble: 90,102 × 2\n   ing_cor ingtrab\n     &lt;dbl&gt;   &lt;dbl&gt;\n 1  56124.  35707.\n 2 108049.  66766.\n 3 133853.  93082.\n 4 105054.      0 \n 5  24212.  22255.\n 6 121650.  40255.\n 7  60261.  33359.\n 8  95978.      0 \n 9 158399.  80951.\n10  61343.  31182.\n# ℹ 90,092 more rows\n\n\nQue tenga la cadena en cualquier parte del nombre\n\nconcentrado2022 %&gt;% \n  select(matches(\"ing\"))\n\n# A tibble: 90,102 × 4\n   percep_ing ing_cor ingtrab otros_ing\n        &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n 1          3  56124.  35707.         0\n 2          2 108049.  66766.         0\n 3          2 133853.  93082.         0\n 4          2 105054.      0          0\n 5          1  24212.  22255.         0\n 6          4 121650.  40255.         0\n 7          2  60261.  33359.         0\n 8          1  95978.      0          0\n 9          3 158399.  80951.         0\n10          2  61343.  31182.         0\n# ℹ 90,092 more rows\n\n\nQue tenga la cadena en la parte final\n\nconcentrado2022 %&gt;% \n  select(matches(\"hog\"))\n\n# A tibble: 90,102 × 4\n   foliohog clase_hog transf_hog ero_nm_hog\n   &lt;chr&gt;        &lt;dbl&gt;      &lt;dbl&gt;      &lt;dbl&gt;\n 1 1                3         0          0 \n 2 1                2      9000.         0 \n 3 1                2         0          0 \n 4 1                3         0          0 \n 5 2                1         0       3214.\n 6 1                2         0          0 \n 7 1                2         0          0 \n 8 1                1      2443.         0 \n 9 1                2         0          0 \n10 1                2      1286.         0 \n# ℹ 90,092 more rows\n\n\n\n\n\nSi queremos seleccionar varios elementos en un solo comando, podemos utilizar %in% seguido de un vector de las opciones a señalar.\nSupongamos que nos queremos quedar con los datos de dos entidades. Con esta excusa también aprenderemos a usar una función para extraer de las cadenas\n\nconcentrado2022 %&lt;&gt;% \n  mutate(ent=stringr::str_sub(folioviv, start=1, end=2 ))\n\nMás del paquete {stringr} aquí\n\nconcentrado2022 %&gt;% \n  filter(ent%in%c(\"09\", \"15\"))\n\n# A tibble: 6,112 × 129\n   folioviv  foliohog ubica_geo tam_loc est_socio est_dis upm   factor clase_hog\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1 09000069… 1        09002     1       3         141     0003…   1578         3\n 2 09000069… 1        09002     1       3         141     0003…   1578         2\n 3 09000069… 1        09002     1       3         141     0003…   1578         3\n 4 09000069… 1        09002     1       3         141     0003…   1578         3\n 5 09000069… 1        09002     1       3         141     0003…   1578         3\n 6 09000069… 1        09002     1       3         141     0003…   1578         2\n 7 09000092… 1        09002     1       3         141     0003…   1474         2\n 8 09000092… 1        09002     1       3         141     0003…   1474         3\n 9 09000092… 1        09002     1       3         141     0003…   1474         1\n10 09000092… 1        09002     1       3         141     0003…   1474         2\n# ℹ 6,102 more rows\n# ℹ 120 more variables: sexo_jefe &lt;dbl&gt;, edad_jefe &lt;dbl&gt;, educa_jefe &lt;dbl&gt;,\n#   tot_integ &lt;dbl&gt;, hombres &lt;dbl&gt;, mujeres &lt;dbl&gt;, mayores &lt;dbl&gt;,\n#   menores &lt;dbl&gt;, p12_64 &lt;dbl&gt;, p65mas &lt;dbl&gt;, ocupados &lt;dbl&gt;,\n#   percep_ing &lt;dbl&gt;, perc_ocupa &lt;dbl&gt;, ing_cor &lt;dbl&gt;, ingtrab &lt;dbl&gt;,\n#   trabajo &lt;dbl&gt;, sueldos &lt;dbl&gt;, horas_extr &lt;dbl&gt;, comisiones &lt;dbl&gt;,\n#   aguinaldo &lt;dbl&gt;, indemtrab &lt;dbl&gt;, otra_rem &lt;dbl&gt;, remu_espec &lt;dbl&gt;, …\n\n\nSi queremos negar esta relación o casi cualquier otro filtro:\n\nconcentrado2022 %&gt;% \n  filter(!ent%in%c(\"09\", \"15\"))\n\n# A tibble: 83,990 × 129\n   folioviv  foliohog ubica_geo tam_loc est_socio est_dis upm   factor clase_hog\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1 01000050… 1        01001     1       4         003     0000…    206         3\n 2 01000050… 1        01001     1       4         003     0000…    206         2\n 3 01000050… 1        01001     1       4         003     0000…    206         2\n 4 01000120… 1        01001     1       3         002     0000…    167         3\n 5 01000120… 2        01001     1       3         002     0000…    167         1\n 6 01000120… 1        01001     1       3         002     0000…    167         2\n 7 01000120… 1        01001     1       3         002     0000…    167         2\n 8 01000193… 1        01001     1       4         003     0000…    212         1\n 9 01000193… 1        01001     1       4         003     0000…    212         2\n10 01000193… 1        01001     1       4         003     0000…    212         2\n# ℹ 83,980 more rows\n# ℹ 120 more variables: sexo_jefe &lt;dbl&gt;, edad_jefe &lt;dbl&gt;, educa_jefe &lt;dbl&gt;,\n#   tot_integ &lt;dbl&gt;, hombres &lt;dbl&gt;, mujeres &lt;dbl&gt;, mayores &lt;dbl&gt;,\n#   menores &lt;dbl&gt;, p12_64 &lt;dbl&gt;, p65mas &lt;dbl&gt;, ocupados &lt;dbl&gt;,\n#   percep_ing &lt;dbl&gt;, perc_ocupa &lt;dbl&gt;, ing_cor &lt;dbl&gt;, ingtrab &lt;dbl&gt;,\n#   trabajo &lt;dbl&gt;, sueldos &lt;dbl&gt;, horas_extr &lt;dbl&gt;, comisiones &lt;dbl&gt;,\n#   aguinaldo &lt;dbl&gt;, indemtrab &lt;dbl&gt;, otra_rem &lt;dbl&gt;, remu_espec &lt;dbl&gt;, …\n\n\n\n\n\nSi intentamos por ejemplo hacer un filtro para quitar los valores perdidos, no se puede hacer con var==NA\nHay un operador especial para decirnos si un valor es perdido o no.\n\nvector&lt;-c(1:5, NA, sqrt(-1), 5/0, -5/0)\n\nWarning in sqrt(-1): Se han producido NaNs\n\nvector\n\n[1]    1    2    3    4    5   NA  NaN  Inf -Inf\n\n\n\nis.na(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE FALSE FALSE\n\n\n\nis.nan(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE  TRUE FALSE FALSE\n\n\n\nis.infinite(vector)\n\n[1] FALSE FALSE FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE\n\n\nComo son condiciones, funcionan como filtros, esto es útil para quitarnos algunos valores perdidos de análisis\n\nconcentrado2022 %&gt;% \n  filter(!is.na(ing_cor)) # no hay perdidos, hay 0\n\n# A tibble: 90,102 × 129\n   folioviv  foliohog ubica_geo tam_loc est_socio est_dis upm   factor clase_hog\n   &lt;chr&gt;     &lt;chr&gt;    &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;     &lt;chr&gt;   &lt;chr&gt;  &lt;dbl&gt;     &lt;dbl&gt;\n 1 01000050… 1        01001     1       4         003     0000…    206         3\n 2 01000050… 1        01001     1       4         003     0000…    206         2\n 3 01000050… 1        01001     1       4         003     0000…    206         2\n 4 01000120… 1        01001     1       3         002     0000…    167         3\n 5 01000120… 2        01001     1       3         002     0000…    167         1\n 6 01000120… 1        01001     1       3         002     0000…    167         2\n 7 01000120… 1        01001     1       3         002     0000…    167         2\n 8 01000193… 1        01001     1       4         003     0000…    212         1\n 9 01000193… 1        01001     1       4         003     0000…    212         2\n10 01000193… 1        01001     1       4         003     0000…    212         2\n# ℹ 90,092 more rows\n# ℹ 120 more variables: sexo_jefe &lt;dbl&gt;, edad_jefe &lt;dbl&gt;, educa_jefe &lt;dbl&gt;,\n#   tot_integ &lt;dbl&gt;, hombres &lt;dbl&gt;, mujeres &lt;dbl&gt;, mayores &lt;dbl&gt;,\n#   menores &lt;dbl&gt;, p12_64 &lt;dbl&gt;, p65mas &lt;dbl&gt;, ocupados &lt;dbl&gt;,\n#   percep_ing &lt;dbl&gt;, perc_ocupa &lt;dbl&gt;, ing_cor &lt;dbl&gt;, ingtrab &lt;dbl&gt;,\n#   trabajo &lt;dbl&gt;, sueldos &lt;dbl&gt;, horas_extr &lt;dbl&gt;, comisiones &lt;dbl&gt;,\n#   aguinaldo &lt;dbl&gt;, indemtrab &lt;dbl&gt;, otra_rem &lt;dbl&gt;, remu_espec &lt;dbl&gt;, …"
  },
  {
    "objectID": "P5.html#agregados",
    "href": "P5.html#agregados",
    "title": "Sesión 5",
    "section": "",
    "text": "El paquete {collapse} tiene muchas funciones para agregar datos. Esta es una operación que puede ser útil cuando queremos pasar de unidades más pequeñas a más grandes.\nSupongamos que necesitamos el total de personas mayores de 64 en cada hogar para pegárselo al concentrado:\n\npoblacion2022 %&gt;% \n  mutate(p65m=edad&gt;64) %&gt;% \n  select(folioviv, foliohog, p65m) %&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  collapse::fsum() -&gt;p65m_hog\n\nfsum() permite utilizar pesos y además hará la suma para cualquier variable. Por ejemplo podríamos dejar crear una variable para el tamaño del hogar\n\npoblacion2022 %&gt;% \n  mutate(p65m=edad&gt;64) %&gt;% \n  mutate(residente=1) %&gt;% \n  select(folioviv, foliohog, p65m, residente) %&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  collapse::fsum() -&gt;pob_hog\n\nTambién hay otros comandos para hacer promedios y más\n\npoblacion2022 %&gt;% \n  select(folioviv, foliohog, edad, ) %&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  collapse::fmean() -&gt;eda_hog\n\n\n\n\nEn sociodemografía es muy muy común que nos importen algunas condiciones e interrelaciones entre los miembros de un hogar. Entonces a veces estudiamos los atributos del hogar como variables de cada individuo, por lo que necesitamos que estén en la misma base.\nPodríamos hacer el merge de los dataframes creados en el apartado anterior y los de población, pero también podemos hacer los estimados dentro de la misma base, así que crearemos variables nuevas\n\npoblacion2022 %&lt;&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  mutate(mean_edad=mean(edad)) %&gt;% \n  ungroup() # esto es importante\n\nEquivalente\n\npoblacion2022 %&lt;&gt;% \n  mutate(mean_edad=mean(edad), .by= c(folioviv, foliohog))\n\nEl puntito en .by es fundamental, sin eso queda agrupado\nPodemos hacer también más operaciones\n\npoblacion2022 %&lt;&gt;% \n  group_by(folioviv, foliohog) %&gt;% \n  mutate(mean_edad=mean(edad)) %&gt;% \n  ungroup()"
  },
  {
    "objectID": "P5.html#at-muchas-operaciones-de-dplyr",
    "href": "P5.html#at-muchas-operaciones-de-dplyr",
    "title": "Sesión 5",
    "section": "",
    "text": "Este es un sufijo que funciona en algunos verbos de {dplyr} y permite hacer una operación en varias variables al mismo tiempo, funciona con vars()\n\n\n\nconcentrado2022 %&gt;% \n  dplyr::mutate_at(vars(clase_hog, sexo_jefe), ~ as_label(.x)) %&gt;% # ojo con la coma y con el punto\n  tabyl(clase_hog, sexo_jefe)\n\n    clase_hog Hombre Mujer\n  unipersonal   6519  5367\n      nuclear  41919 13621\n     ampliado  12898  8888\n    compuesto    372   211\n corresidente    197   110\n\n\n\n\n\nPrimero revisemos la opción paste y paste0\n\npaste(\"a\",\"b\", sep=\"_\")\n\n[1] \"a_b\"\n\npaste(\"a\",\"b\")\n\n[1] \"a b\"\n\npaste0(\"a\",\"b\")\n\n[1] \"ab\"\n\n\n\nconcentrado2022 %&gt;% \n  dplyr::rename_at(vars(clase_hog, sexo_jefe), ~ paste0(.x, \"_2022\")) %&gt;% # sufijo\n  select(clase_hog_2022, sexo_jefe_2022)\n\n# A tibble: 90,102 × 2\n   clase_hog_2022 sexo_jefe_2022\n            &lt;dbl&gt;          &lt;dbl&gt;\n 1              3              2\n 2              2              1\n 3              2              1\n 4              3              1\n 5              1              1\n 6              2              1\n 7              2              2\n 8              1              2\n 9              2              2\n10              2              1\n# ℹ 90,092 more rows\n\n\n\nconcentrado2022 %&gt;% \n  dplyr::rename_at(vars(clase_hog, sexo_jefe), ~ paste0(\"desc_\", .x)) %&gt;% # prefijo\n  select(starts_with(\"desc\"))\n\n# A tibble: 90,102 × 2\n   desc_clase_hog desc_sexo_jefe\n            &lt;dbl&gt;          &lt;dbl&gt;\n 1              3              2\n 2              2              1\n 3              2              1\n 4              3              1\n 5              1              1\n 6              2              1\n 7              2              2\n 8              1              2\n 9              2              2\n10              2              1\n# ℹ 90,092 more rows"
  },
  {
    "objectID": "P5.html#descriptivos-para-variables-cuantitativas",
    "href": "P5.html#descriptivos-para-variables-cuantitativas",
    "title": "Sesión 5",
    "section": "",
    "text": "Vamos a empezar a revisar los gráficos para variables cuantitativas.\n\n\n5 números\n\nsummary(concentrado2022$ing_cor) ## ingresos\n\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n      0   28386   46074   61490   74344 7153770 \n\n\nCon pipes se pueden crear “indicadores” de nuestras variables es un tibble, tal como lo hicimos con el diseño complejo\n\nconcentrado2022 %&gt;% \n  dplyr::summarise(nombre_indicador=mean(ing_cor, na.rm=T)) # las funciones también pueden tener atributos\n\n# A tibble: 1 × 1\n  nombre_indicador\n             &lt;dbl&gt;\n1           61490.\n\n\nFunciona con group_by() y con .by()\n\nconcentrado2022 %&gt;% \n  dplyr::summarise(nombre_indicador=mean(ing_cor, na.rm=T), .by=ent) # las funciones también pueden tener atributos\n\n# A tibble: 32 × 2\n   ent   nombre_indicador\n   &lt;chr&gt;            &lt;dbl&gt;\n 1 01              73162.\n 2 02              80341.\n 3 03              87777.\n 4 04              57921.\n 5 05              69761.\n 6 06              63841.\n 7 07              40765.\n 8 08              73981.\n 9 09              77909.\n10 10              53608.\n# ℹ 22 more rows\n\n\n\nconcentrado2022 %&gt;% \n  dplyr::summarise_at(vars(contains(\"ing\")), ~ mean(.x)) # las funciones también pueden tener atributos\n\n# A tibble: 1 × 4\n  percep_ing ing_cor ingtrab otros_ing\n       &lt;dbl&gt;   &lt;dbl&gt;   &lt;dbl&gt;     &lt;dbl&gt;\n1       2.26  61490.  40360.      50.9\n\n\n\n\n\n\nhist(concentrado2022$ing_cor)\n\n\n\nboxplot(concentrado2022$ing_cor)\n\n\n\n\nLe podemos modificar el título del eje de las x y de las y\n\nhist(concentrado2022$ing_cor, \n     main=\"Histograma de los ingresos corrientes\", \n     xlab=\"pesos mexicanos\", ylab=\"Frecuencia\") \n\n\n\n\n¡A ponerle colorcitos! Aquí hay una lista http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf\n\nhist(concentrado2022$ing_cor, \n     main=\"Histograma de los ingresos corrientes\", \n     xlab=\"pesos mexicanos\", ylab=\"Frecuencia\",\n     col=\"deeppink1\") \n\n\n\n\nCon pipes:\n\nconcentrado2022 %&gt;% \n    with(hist(ing_cor)) # con with, para que entienda\n\n\n\n\nCuando usamos pipes, se debe de recordar que no es necesario escribir el nombre del data.frame en el filtro porque es lo primero que colocamos en nuestro “pipe”.\nCheca que cualquier aditamiento debe ir en el pipe donde está el comando de hist(). Ten cuidado con los paréntesis.\n\nconcentrado2022 %&gt;% \n  filter(!is.na(ing_cor)) %&gt;% # la ventaja de esta forma es que podemos hacer más operaciones\n    with(hist(ing_cor, main= \"histograma\"))"
  },
  {
    "objectID": "P5.html#intro-a-la-correlación",
    "href": "P5.html#intro-a-la-correlación",
    "title": "Sesión 5",
    "section": "",
    "text": "plot(concentrado2022$ing_cor, concentrado2022$gasto_mon)"
  },
  {
    "objectID": "P6.html#escalas-de-color",
    "href": "P6.html#escalas-de-color",
    "title": "Sesión 6",
    "section": "",
    "text": "RColorBrewer::display.brewer.all()\n\n\n\n\n\ng_bivariado + scale_fill_brewer(palette = \"Dark2\")\n\n\n\n\n\n\n\n\ng_bivariado + scale_fill_viridis_d()\n\n\n\n\n\n\n\n\nwesanderson::wes_palettes\n\n$BottleRocket1\n[1] \"#A42820\" \"#5F5647\" \"#9B110E\" \"#3F5151\" \"#4E2A1E\" \"#550307\" \"#0C1707\"\n\n$BottleRocket2\n[1] \"#FAD510\" \"#CB2314\" \"#273046\" \"#354823\" \"#1E1E1E\"\n\n$Rushmore1\n[1] \"#E1BD6D\" \"#EABE94\" \"#0B775E\" \"#35274A\" \"#F2300F\"\n\n$Rushmore\n[1] \"#E1BD6D\" \"#EABE94\" \"#0B775E\" \"#35274A\" \"#F2300F\"\n\n$Royal1\n[1] \"#899DA4\" \"#C93312\" \"#FAEFD1\" \"#DC863B\"\n\n$Royal2\n[1] \"#9A8822\" \"#F5CDB4\" \"#F8AFA8\" \"#FDDDA0\" \"#74A089\"\n\n$Zissou1\n[1] \"#3B9AB2\" \"#78B7C5\" \"#EBCC2A\" \"#E1AF00\" \"#F21A00\"\n\n$Darjeeling1\n[1] \"#FF0000\" \"#00A08A\" \"#F2AD00\" \"#F98400\" \"#5BBCD6\"\n\n$Darjeeling2\n[1] \"#ECCBAE\" \"#046C9A\" \"#D69C4E\" \"#ABDDDE\" \"#000000\"\n\n$Chevalier1\n[1] \"#446455\" \"#FDD262\" \"#D3DDDC\" \"#C7B19C\"\n\n$FantasticFox1\n[1] \"#DD8D29\" \"#E2D200\" \"#46ACC8\" \"#E58601\" \"#B40F20\"\n\n$Moonrise1\n[1] \"#F3DF6C\" \"#CEAB07\" \"#D5D5D3\" \"#24281A\"\n\n$Moonrise2\n[1] \"#798E87\" \"#C27D38\" \"#CCC591\" \"#29211F\"\n\n$Moonrise3\n[1] \"#85D4E3\" \"#F4B5BD\" \"#9C964A\" \"#CDC08C\" \"#FAD77B\"\n\n$Cavalcanti1\n[1] \"#D8B70A\" \"#02401B\" \"#A2A475\" \"#81A88D\" \"#972D15\"\n\n$GrandBudapest1\n[1] \"#F1BB7B\" \"#FD6467\" \"#5B1A18\" \"#D67236\"\n\n$GrandBudapest2\n[1] \"#E6A0C4\" \"#C6CDF7\" \"#D8A499\" \"#7294D4\"\n\n$IsleofDogs1\n[1] \"#9986A5\" \"#79402E\" \"#CCBA72\" \"#0F0D0E\" \"#D9D0D3\" \"#8D8680\"\n\n$IsleofDogs2\n[1] \"#EAD3BF\" \"#AA9486\" \"#B6854D\" \"#39312F\" \"#1C1718\"\n\n\n\nwesanderson::wes_palette(\"IsleofDogs1\", n=5)\n\n\n\nmi_paleta &lt;- wesanderson::wes_palette(\"IsleofDogs1\", n=5)\n\n\ng_bivariado + scale_fill_manual(values=mi_paleta)"
  }
]